getwd()
library(devtools)
library(roxygen2)
library(dplyr)
setwd("C:/Users/zhuob01/Documents/cdashQC-master")
setwd("C:/Users/zhuob01/Documents/cdashQC/cdashQC-master")
document()
check()
build(manual = T)
setwd("..")
install("cdashQC")
getwd()
install("cdashQC")
toupper("cdashQC")
install("cdashQC")
install.packages("~/cdashQC/cdashQC_0.1.1.tar.gz", repos = NULL, type = "source")
setwd("C:/Users/zhuob01/Documents/cdashQC/cdashQC-master")
install.packages("~/cdashQC/cdashQC_0.1.1.tar.gz", repos = NULL, type = "source")
a <- create_threshold(flagvar = "PR", lower = 150, upper = 200, include_lower = FALSE, include_upper = TRUE,  flg_label = "^")
b <- create_threshold(flagvar = "QTCF",  upper = 430, flg_label = "*", add2existing = TRUE, thresh = a)
data <- data.frame(PR = rnorm(10, 175, 25), QTCF = rnorm(10, 440, 20))
flg_var(data, thresh=b, oor=c(TRUE, FALSE))
library(cdashQC)
a <- create_threshold(flagvar = "PR", lower = 150, upper = 200, include_lower = FALSE, include_upper = TRUE,  flg_label = "^")
b <- create_threshold(flagvar = "QTCF",  upper = 430, flg_label = "*", add2existing = TRUE, thresh = a)
data <- data.frame(PR = rnorm(10, 175, 25), QTCF = rnorm(10, 440, 20))
flg_var(data, thresh=b, oor=c(TRUE, FALSE))
library(ggplot2)
library(reshape2)
library(scales)
library(NBPSeq)
install.packages("NBPSeq")
install.packages("GGally")
install.packages("gridExtra")
library(grid)
install.packages("cowplot")
install.packages("VennDiagram")
library(lme4)
install.packages("lme4")
# note: the following packages are required to reproduce the results
library(ggplot2)
library(reshape2)
library(scales)
library(NBPSeq)
library(GGally)
library(gridExtra)
library(grid)
library(cowplot)
library(VennDiagram)
library(lme4)
install.packages("NBPSeq")
library(NBPSeq)
install.packages("qvalue")
## try http:// if https:// URLs are not supported
source("https://bioconductor.org/biocLite.R")
biocLite("qvalue")
library(NBPSeq)
library(ggplot2)
library(reshape2)
library(scales)
library(NBPSeq)
library(GGally)
library(gridExtra)
library(grid)
library(cowplot)
library(VennDiagram)
library(lme4)
getwd()
project_folder <- "C:/Users/zhuob01/Desktop/StablyExpressedGenes-master/"
RawDataPath <- paste(project_folder, "/R/data-raw", sep ="")           # where all the raw counts data are stored
DataPath <- paste(project_folder, "/R/data/", sep ="")                 # where are the RNA-Seq data chosen after normalization filter
ResultPath <-  paste(project_folder, "/Results/", sep ="")             # where are the results from running GLMM
CodePath <-  paste(project_folder, "/R/R/", sep ="")                   # where are the code for producing the results
FigurePath <-  paste(project_folder, "/Results/Figures/", sep = "")    # where the figures will be stored
SuppPath <-  paste(project_folder, "/Supplementary/", sep ="")         # where the supplementary files will be stored
source(paste(CodePath, "Run.Results.R", sep =""))                      # all the figures and results needed in the paper.
install.packages("xtable")
library(xtable)
source(paste(CodePath, "Run.Results.R", sep =""))                      # all the figures and results needed in the paper.
source(paste(CodePath, "SelectingData.R", sep = ""))                   # creating the three data sets
source(paste(CodePath, "Run.geNorm.R", sep =""))                       # run geNorm (without iteration to all genes in multi-tissue group)
source(paste(CodePath, "Run.GLMM.R", sep = ""))                        # fit glmm to the data sets
ote: the following packages are required to reproduce the results
library(ggplot2)
library(reshape2)
library(scales)
library(NBPSeq)
library(GGally)
library(gridExtra)
library(grid)
library(cowplot)
library(VennDiagram)
library(lme4)
library(xtable)
project_folder <- "C:/Users/zhuob01/Desktop/StablyExpressedGenes-master/"
RawDataPath <- paste(project_folder, "/R/data-raw", sep ="")           # where all the raw counts data are stored
DataPath <- paste(project_folder, "/R/data/", sep ="")                 # where are the RNA-Seq data chosen after normalization filter
ResultPath <-  paste(project_folder, "/Results/", sep ="")             # where are the results from running GLMM
CodePath <-  paste(project_folder, "/R/R/", sep ="")                   # where are the code for producing the results
FigurePath <-  paste(project_folder, "/Results/Figures/", sep = "")    # where the figures will be stored
SuppPath <-  paste(project_folder, "/Supplementary/", sep ="")         # where the supplementary files will be stored
source(paste(CodePath, "SelectingData.R", sep = ""))                   # creating the three data sets
source(paste(CodePath, "Run.GLMM.R", sep = ""))                        # fit glmm to the data sets
source(paste(CodePath, "Run.geNorm.R", sep =""))                       # run geNorm (without iteration to all genes in multi-tissue group)
source(paste(CodePath, "Run.Results.R", sep =""))                      # all the figures and results needed in the paper.
# note: the following packages are required to reproduce the results
library(ggplot2)
library(reshape2)
library(scales)
library(NBPSeq)
library(GGally)
library(gridExtra)
library(grid)
library(cowplot)
library(VennDiagram)
library(lme4)
library(xtable)
source(paste(CodePath, "Run.Results.R", sep =""))                      # all the figures and results needed in the paper.
project_folder <- "C:/Users/zhuob01/Desktop/StablyExpressedGenes-master/"
RawDataPath <- paste(project_folder, "/R/data-raw", sep ="")           # where all the raw counts data are stored
DataPath <- paste(project_folder, "/R/data/", sep ="")                 # where are the RNA-Seq data chosen after normalization filter
ResultPath <-  paste(project_folder, "/Results/", sep ="")             # where are the results from running GLMM
CodePath <-  paste(project_folder, "/R/R/", sep ="")                   # where are the code for producing the results
FigurePath <-  paste(project_folder, "/Results/Figures/", sep = "")    # where the figures will be stored
SuppPath <-  paste(project_folder, "/Supplementary/", sep ="")         # where the supplementary files will be stored
source(paste(CodePath, "Run.Results.R", sep =""))                      # all the figures and results needed in the paper.
