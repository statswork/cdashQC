{
    "collab_server" : "",
    "contents" : "---\ntitle: \"test\"\noutput: html_document\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n# load the packages and data sets\n\n```{r}\nsource(\"C:/Users/zhuob01/Documents/cdashQC/setup.R\")\n\n\n# locate the data\npr_no <- \"CA19379\"                   \nclient_name <- \"Theravance\"                \ndata_path <- paste(\"Y:/production\", client_name,  pr_no, \"sas_prg/sas_data/\", sep = \"/\")\nsetwd(data_path)\n\ndm <- read_sas(\"dm.sas7bdat\") \nex <- read_sas(\"ex.sas7bdat\") %>% filter(EX_TRT_C != \"07_G\")\nvs <- read_sas(\"vs.sas7bdat\")  \nae <- read_sas(\"ae.sas7bdat\")\neg <- read_sas(\"eg.sas7bdat\")\nlb_cq <- read_sas(\"lb_cq.sas7bdat\") %>% filter(as.numeric(CLIENTID)  > 2999 & as.numeric(CLIENTID)  < 3999 & trimws(PERIOD) != \"2\" & trimws(PERIOD) != \"Early Termination <7\")\n# lb_cq <- read_sas(\"lb_cq.sas7bdat\")\ncm <- read_sas(\"cm.sas7bdat\") \ncr <- read_sas(\"cr.sas7bdat\")\nds <- read_sas(\"ds.sas7bdat\")\nincluded <- new_create_included(ex, dm, cr, ds)\n\nvs_prob <- check_vs(vs)\neg_prob <- check_eg(eg)\n```\n\n\n# Demographic summaries\n```{r echo = F, cache=FALSE}\noptions(width = 300)\n\na0 <- dem_summary(dm, ex, vs, included, group = \"EX_TRT_C\")\n# kable(a0)\na1 <- dem_listing(dm, ex, vs, included)\nkable(a0$categorical, table.attr = 'class=\"flat-table\"', digits = 2)\nkable(a0$continous, table.attr = 'class=\"flat-table\"', digits = 2)\n\nkable(a1, table.attr = 'class=\"flat-table\"', digits = 2)\n\n```\n\n\n\n# AEs\n```{r echo = F, cache= F}\noptions(width = 300)\naet <- create_aet(ae, ex, included)\n\nkable(ae_listing(aet, type = 1))\nkable(ae_listing(aet, type = 2))\nkable(ae_listing(aet, type = 3))\n```\n\n\n\n\n# ECGs\n```{r echo = F, cache=F}\noptions(width=300)\n\neg1 <- create_eg(eg)\nvariable <- c(\"HR\",\"PR\",\"QRS\", rep(\"QTCF\", 5))\nlower <- c(120, 200, 120, 430, 450, 470, 480, 500)\nupper <- c(Inf, Inf, Inf, 450, 470, 480, 500, Inf)\ninclude_lower <- c(F, F, F, rep(F, 5))\ninclude_upper <- c(T, T, T, rep(T, 5))\nflg_label <- as.character(letters[1:8])\n\nthresh <- data.frame(variable = variable, lower = lower, upper = upper, include_lower= include_lower, include_upper = include_upper, flg_label = flg_label)\noor1 <- c(F, F, F, rep(F, 5))\neg_out <- flg_var(eg1, thresh, oor=oor1)\n# eg_out <- flg_var(eg1, thresh)\n# eg_out <- keep_non_empty(eg_out, pattern = \"\", return_truncated_data = T)\n# kable(eg_out)\n\n#  calculate change from baselines\n# step 1: find the triplicates\neg2 <- replicate_eg(eg, reps = 3)\n\n# step 2: tell which obs shall not be included as triplicates\neg_prob <- eg2$data_dirty     # need manual check\nrows_removed <- c(2, 4, 7, 13, 14, 15, 19, 25, 28, 32, 37, 40, 44, 52, 57, 59, 64, 65)\n\neg3 <- replicate_clean(eg2, rows_removed)\n\n# calculate the averages\neg_ave <- replicate_average(eg3, prefix = \"Ave\")\nkable(eg_ave, digits = 2)\n\n# calculate change from baseline\n\neg_change <- change_from_base(eg3)\nkable(eg_change, digits = 2)\n\n```\n\n\n\n\n# Vital Signs\n```{r echo = F, cache=FALSE}\noptions(width = 300)\n\nvs1 <- create_vs(vs)\n\nvariable <- c(\"SYSTOLIC\", \"DIASTOLIC\",\"HR\")\nlower <- c(85, 45, 40)\nupper <- c(140, 90, 100)\ninclude_lower <- rep(F, length(lower))\ninclude_upper <- rep(F, length(upper))\nflg_label <- c(\"*\", \"^\", \"#\")\nthresh_vs <- data.frame(variable = variable, lower = lower, upper = upper, include_lower= include_lower, include_upper = include_upper, flg_label = flg_label)\n\nvs2 <- flg_var(vs1, thresh_vs, oor = rep(T, nrow(thresh_vs)))\n# vs2 <- keep_non_empty(vs2, return_truncated_data = T)\n\n# kable(vs2, digits = 2)\n```\n\n\n\n\n\n# Concomitant medication\n```{r echo = F, cache=FALSE}\noptions(width = 300)\n\ncon <- concom(cm)\n# count the column width for each variable\ns1 <- apply(con, 2, nchar)\ns1[is.na(s1)] <- 0\ns2 <- apply(s1, 2, max)\nkable(con)\n```\n\n\n# Lab shift\n```{r echo= F, cache=F}\nothers <- labshift(lb_cq, included, ex,  UA=F)\nUA <- labshift(lb_cq, included, ex, UA=T)\n\nkable(others)\nkable(UA)\n```\n\n# Lab OOR\n```{r, results=\"asis\", echo= F, cache=F}\noptions(width = 500)\n# oor_all <- oor_value(lb_cq, transpose = T)\nlb_cq1 <- lb_cq %>% filter(as.numeric(CLIENTID) >2999)\nlab_oor(lb_cq, ex, var_per_block = 6, digit_keep = 2)\n\n```\n\n\n\n\n",
    "created" : 1476392700830.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "37385928",
    "id" : "BC779DFE",
    "lastKnownWriteTime" : 1476325498,
    "last_content_update" : 1476325498,
    "path" : "~/TestPackage/19379_test.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}